{"ast":null,"code":"import _slicedToArray from \"/home/jadson/Downloads/repositories/PAINEL2/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/jadson/Downloads/repositories/PAINEL2/frontend/src/components/Weather/index.js\";\nimport React, { useState, useEffect } from 'react';\nimport OAuth from 'oauth';\nimport Price from '../Price';\nimport './style.css';\n\nfunction Time() {\n  const ObjDate = new Date();\n  const getday = ObjDate.getDate();\n  const getmonth = ObjDate.getMonth();\n  const gethours = ObjDate.getHours();\n  const getminutes = ObjDate.getMinutes();\n  const getseconds = ObjDate.getSeconds();\n  const getfullyear = ObjDate.getFullYear();\n  const Month = [\"Janeiro\", \"Fevereiro\", \"Março\", \"Abril\", \"Maio\", \"Junho\", \"Julho\", \"Agosto\", \"Setebro\", \"Outubro\", \"Novembro\", \"Dezembro\"];\n  return `${getday} de ${Month[getmonth]} de ${getfullyear} ${gethours}:${getminutes}:${getseconds}`;\n}\n\nfunction Weather() {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        forecast = _useState2[0],\n        setForecast = _useState2[1];\n\n  const _useState3 = useState(''),\n        _useState4 = _slicedToArray(_useState3, 2),\n        date = _useState4[0],\n        setDate = _useState4[1];\n\n  useEffect(() => {\n    /* Documentation  yahoo example request */\n\n    /* https://developer.yahoo.com/weather/documentation.html#oauth-nodejs */\n    function getDada() {\n      const header = {\n        \"X-Yahoo-App-Id\": \"2niQNT76\"\n      };\n      const request = new OAuth.OAuth(null, null, 'dj0yJmk9SW5MbENlTHp4MmpzJmQ9WVdrOU1tNXBVVTVVTnpZbWNHbzlNQS0tJnM9Y29uc3VtZXJzZWNyZXQmc3Y9MCZ4PWJh', '3133b58680533bed7ad74663106dcc089529ad3b', '1.0', null, 'HMAC-SHA1', null, header);\n      request.get('https://weather-ydn-yql.media.yahoo.com/forecastrss?location=florianópolis&u=c&format=json', null, null, function (err, data, result) {\n        if (err) {\n          console.log(err);\n        } else {\n          const repo_yahoo = JSON.parse(data); //document.getElementById('condicion').innerHTML = `${repo_yahoo.forecasts[0].text}`\n\n          setForecast(repo_yahoo.forecasts);\n        }\n      });\n    }\n\n    getDada();\n  }, []);\n  setTimeout(() => {\n    setDate(Time());\n  }, 1000);\n  return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    className: \"containerWeather\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(\"header\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, \"Hor\\xE1rio\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, date)), React.createElement(Price, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }), React.createElement(\"footer\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, forecast.map(item => React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, item.day), React.createElement(\"img\", {\n    src: `http://l.yimg.com/a/i/us/we/52/${item.code}.gif`,\n    alt: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, item.high, \"\\xB0\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, item.low, \"\\xB0\")))))));\n}\n\nexport default Weather;","map":{"version":3,"sources":["/home/jadson/Downloads/repositories/PAINEL2/frontend/src/components/Weather/index.js"],"names":["React","useState","useEffect","OAuth","Price","Time","ObjDate","Date","getday","getDate","getmonth","getMonth","gethours","getHours","getminutes","getMinutes","getseconds","getSeconds","getfullyear","getFullYear","Month","Weather","forecast","setForecast","date","setDate","getDada","header","request","get","err","data","result","console","log","repo_yahoo","JSON","parse","forecasts","setTimeout","map","item","day","code","high","low"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport OAuth from 'oauth'\nimport Price from '../Price'\nimport './style.css'  \n\nfunction Time() {\n  const ObjDate = new Date()\n  const getday = ObjDate.getDate()\n  const getmonth = ObjDate.getMonth()\n  const gethours = ObjDate.getHours()\n  const getminutes = ObjDate.getMinutes()\n  const getseconds = ObjDate.getSeconds()\n  const getfullyear = ObjDate.getFullYear()\n\n  const Month = [\"Janeiro\", \"Fevereiro\", \"Março\", \"Abril\", \"Maio\", \"Junho\", \"Julho\", \"Agosto\", \"Setebro\", \"Outubro\", \"Novembro\",\"Dezembro\"]\n\n  return `${getday} de ${Month[getmonth]} de ${getfullyear} ${gethours}:${getminutes}:${getseconds}`\n}\n\n\nfunction Weather(){\n    const [forecast, setForecast ] = useState([])\n\n    const [ date, setDate ] = useState('')\n    useEffect(()=>{\n        /* Documentation  yahoo example request */\n        /* https://developer.yahoo.com/weather/documentation.html#oauth-nodejs */\n         function getDada() {\n   \n           const header = {\n             \"X-Yahoo-App-Id\": \"2niQNT76\"\n           };\n         \n           const request = new OAuth.OAuth(\n               null,\n               null,\n               'dj0yJmk9SW5MbENlTHp4MmpzJmQ9WVdrOU1tNXBVVTVVTnpZbWNHbzlNQS0tJnM9Y29uc3VtZXJzZWNyZXQmc3Y9MCZ4PWJh',\n               '3133b58680533bed7ad74663106dcc089529ad3b',\n               '1.0',\n               null,\n               'HMAC-SHA1',\n               null,\n               header\n           );\n         \n          request.get(\n             'https://weather-ydn-yql.media.yahoo.com/forecastrss?location=florianópolis&u=c&format=json',\n             null,\n             null,\n             function (err, data, result) {\n                 if (err) {\n                     console.log(err);\n                 } else {\n                   const repo_yahoo = JSON.parse(data)\n                   //document.getElementById('condicion').innerHTML = `${repo_yahoo.forecasts[0].text}`\n                   setForecast(repo_yahoo.forecasts)\n                 }\n             }\n          );\n         }\n         getDada()\n       },[])\n\n       setTimeout(()=>{\n         setDate(Time())\n       }, 1000)\n    return (\n      <>  \n        <div className=\"containerWeather\" >\n          <header>\n              <h1>Horário</h1>\n              <p>{date}</p>\n          </header>\n             <Price />\n          <footer>\n          {\n               forecast.map(item=> (\n\n                <ul>\n                    <p>{item.day}</p>\n                    <img src={`http://l.yimg.com/a/i/us/we/52/${item.code}.gif`}  alt=\"\"/>\n                  <div>\n                   <p>{item.high}°</p>\n                   <p>{item.low}°</p>\n                  </div>\n                </ul>\n               ))\n             }\n          </footer>\n        </div>\n      </>\n    )\n}\n\nexport default Weather"]},"metadata":{},"sourceType":"module"}