{"ast":null,"code":"import _slicedToArray from \"/home/jadson/Downloads/repositories/PAINEL2/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/jadson/Downloads/repositories/PAINEL2/frontend/src/components/UpdateRoom/index.js\";\nimport React, { useState } from 'react';\nimport io from 'socket.io-client';\nimport api from '../../services/api';\nimport config from '../../config';\nimport handleActionAlert from '../../global/handleActionAlert';\nimport './style.css';\nconst socket = io(`${config.backend.url}`);\n\nfunction UpdateRoom() {\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        room = _useState2[0],\n        setRoom = _useState2[1];\n\n  const _useState3 = useState(''),\n        _useState4 = _slicedToArray(_useState3, 2),\n        file = _useState4[0],\n        setFile = _useState4[1];\n\n  async function handleUpdateRoom() {\n    if (room !== '' && file !== '') {\n      const form = new FormData();\n      data.append('file', file, file.name);\n      data.append('room', room);\n\n      const _ref = await api.put('/room', data, {\n        headers: {\n          authorization: `Bearer ${sessionStorage.getItem('token')}`\n        }\n      }),\n            data = _ref.data;\n\n      if (data === 1) {\n        socket.emit('send-image', {\n          data: 'send-image'\n        });\n        handleActionAlert(\"Sucesso em Atualizar Sala\", 'flex', 'green');\n      } else {\n        handleActionAlert(\"Falha em Atualizar Sala\", 'flex', 'red');\n      }\n    }\n  }\n\n  return React.createElement(\"div\", {\n    id: \"contianerUpdateRoom\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, \"Atualizar Sala\"), React.createElement(\"input\", {\n    className: \"inputs\",\n    type: \"text\",\n    placeholder: \"N\\xFAmero da sala\",\n    onChange: value => setRoom(value.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"file\",\n    name: \"file\",\n    onChange: value => setFile(value.target.files[0]),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    id: \"incorret\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    id: \"submit\",\n    onClick: handleUpdateRoom,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \"Enviar\")));\n}\n\nexport default UpdateRoom;","map":{"version":3,"sources":["/home/jadson/Downloads/repositories/PAINEL2/frontend/src/components/UpdateRoom/index.js"],"names":["React","useState","io","api","config","handleActionAlert","socket","backend","url","UpdateRoom","room","setRoom","file","setFile","handleUpdateRoom","form","FormData","data","append","name","put","headers","authorization","sessionStorage","getItem","emit","value","target","files"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,EAAP,MAAe,kBAAf;AACA,OAAOC,GAAP,MAAgB,oBAAhB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,iBAAP,MAA8B,gCAA9B;AAEA,OAAO,aAAP;AAEA,MAAMC,MAAM,GAAGJ,EAAE,CAAE,GAAEE,MAAM,CAACG,OAAP,CAAeC,GAAI,EAAvB,CAAjB;;AAGA,SAASC,UAAT,GAAsB;AAAA,oBACMR,QAAQ,CAAC,EAAD,CADd;AAAA;AAAA,QACXS,IADW;AAAA,QACLC,OADK;;AAAA,qBAEMV,QAAQ,CAAC,EAAD,CAFd;AAAA;AAAA,QAEXW,IAFW;AAAA,QAELC,OAFK;;AAIlB,iBAAeC,gBAAf,GAAkC;AAE9B,QAAIJ,IAAI,KAAK,EAAT,IAAeE,IAAI,KAAK,EAA5B,EAA+B;AAE3B,YAAMG,IAAI,GAAG,IAAIC,QAAJ,EAAb;AACAC,MAAAA,IAAI,CAACC,MAAL,CAAY,MAAZ,EAAmBN,IAAnB,EAAwBA,IAAI,CAACO,IAA7B;AACAF,MAAAA,IAAI,CAACC,MAAL,CAAY,MAAZ,EAAoBR,IAApB;;AAJ2B,mBAMZ,MAAMP,GAAG,CAACiB,GAAJ,CAAQ,OAAR,EACrBH,IADqB,EAErB;AACII,QAAAA,OAAO,EAAE;AACLC,UAAAA,aAAa,EAAG,UAASC,cAAc,CAACC,OAAf,CAAuB,OAAvB,CAAgC;AADpD;AADb,OAFqB,CANM;AAAA,YAMpBP,IANoB,QAMpBA,IANoB;;AAc3B,UAAGA,IAAI,KAAK,CAAZ,EAAc;AAEVX,QAAAA,MAAM,CAACmB,IAAP,CAAY,YAAZ,EAA2B;AAAER,UAAAA,IAAI,EAAE;AAAR,SAA3B;AACAZ,QAAAA,iBAAiB,CAAC,2BAAD,EAA6B,MAA7B,EAAoC,OAApC,CAAjB;AACH,OAJD,MAIM;AACFA,QAAAA,iBAAiB,CAAC,yBAAD,EAA2B,MAA3B,EAAkC,KAAlC,CAAjB;AACH;AACJ;AACJ;;AACD,SACE;AAAK,IAAA,EAAE,EAAC,qBAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADH,EAEG;AAAO,IAAA,SAAS,EAAC,QAAjB;AAA0B,IAAA,IAAI,EAAC,MAA/B;AAAsC,IAAA,WAAW,EAAC,mBAAlD;AAAmE,IAAA,QAAQ,EAAEqB,KAAK,IAAIf,OAAO,CAACe,KAAK,CAACC,MAAN,CAAaD,KAAd,CAA7F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFH,EAGG;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,IAAI,EAAC,MAAxB;AAA+B,IAAA,QAAQ,EAAEA,KAAK,IAAIb,OAAO,CAACa,KAAK,CAACC,MAAN,CAAaC,KAAb,CAAmB,CAAnB,CAAD,CAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHH,EAIG;AAAG,IAAA,EAAE,EAAC,UAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJH,EAKG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAQ,IAAA,EAAE,EAAC,QAAX;AAAoB,IAAA,OAAO,EAAEd,gBAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,CALH,CADF;AAWH;;AAED,eAAeL,UAAf","sourcesContent":["import React, { useState } from 'react';\nimport io from 'socket.io-client';\nimport api from '../../services/api'\nimport config from '../../config'\nimport handleActionAlert from '../../global/handleActionAlert'\n\nimport './style.css'\n\nconst socket = io(`${config.backend.url}`)\n\n\nfunction UpdateRoom() {\n    const [room, setRoom] = useState('')  \n    const [file, setFile] = useState('')  \n\n    async function handleUpdateRoom (){\n    \n        if (room !== '' && file !== ''){\n\n            const form = new FormData()\n            data.append('file',file,file.name)\n            data.append('room', room)\n            \n            const {data} = await api.put('/room', \n            data,\n            {\n                headers: {\n                    authorization: `Bearer ${sessionStorage.getItem('token')}`\n                }\n            })\n         \n            if(data === 1){\n               \n                socket.emit('send-image',  { data: 'send-image' } )\n                handleActionAlert(\"Sucesso em Atualizar Sala\",'flex','green')                \n            }else {\n                handleActionAlert(\"Falha em Atualizar Sala\",'flex','red')\n            }\n        }\n    }\n    return (\n      <div id=\"contianerUpdateRoom\">\n         <h2>Atualizar Sala</h2>\n         <input className='inputs' type=\"text\" placeholder=\"NÃºmero da sala\" onChange={value => setRoom(value.target.value)} />\n         <input type=\"file\" name=\"file\" onChange={value => setFile(value.target.files[0])} />\n         <p id=\"incorret\"></p>\n         <div>\n             <button id=\"submit\" onClick={handleUpdateRoom} >Enviar</button>\n         </div>\n      </div>    \n    );\n}\n\nexport default UpdateRoom;\n\n\n"]},"metadata":{},"sourceType":"module"}