{"ast":null,"code":"var _jsxFileName = \"/home/jadson/Downloads/repositories/PAINEL/frontend/src/components/AddRoom/index.js\";\nimport React, { useState } from 'react';\nimport io from 'socket.io-client';\nimport api from '../../services/api';\nimport config from '../../config';\nimport handleActionAlert from '../../global/handleActionAlert';\nimport './style.css';\nconst socket = io(`${config.backend.url}`);\n\nfunction AddRoom() {\n  const [room, setRoom] = useState('');\n  const [floor, setFloor] = useState('');\n  const [file, setFile] = useState('');\n\n  async function handleAddRoom() {\n    if (room !== '' && floor !== '' && file !== '') {\n      const form = new FormData();\n      form.append('file', file, file.name);\n      form.append('room', room);\n      form.append('numberfloor', floor);\n      const {\n        data\n      } = await api.post('/room', form, {\n        headers: {\n          authorization: `Bearer ${sessionStorage.getItem('token')}`\n        }\n      });\n\n      if (data.status === \"Success in create room\") {\n        socket.emit('send-image', {\n          data: 'send-image'\n        });\n        handleActionAlert(\"Sucesso em Criar Sala\", 'flex', 'green');\n      } else {\n        handleActionAlert(\"Falha em Criar Sala\", 'flex', 'red');\n      }\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: \"contianerAddRoom\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"primary-text-color\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, \"Adicionar Sala\"), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"inputs\",\n    type: \"text\",\n    placeholder: \"N\\xFAmbero da sala\",\n    onChange: value => setRoom(value.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"inputs\",\n    type: \"text\",\n    placeholder: \"N\\xFAmero do andar\",\n    onChange: value => setFloor(value.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    name: \"file\",\n    onChange: value => setFile(value.target.files[0]),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    id: \"incorret\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"buttons\",\n    onClick: handleAddRoom,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, \"Enviar\")));\n}\n\nexport default AddRoom;","map":{"version":3,"sources":["/home/jadson/Downloads/repositories/PAINEL/frontend/src/components/AddRoom/index.js"],"names":["React","useState","io","api","config","handleActionAlert","socket","backend","url","AddRoom","room","setRoom","floor","setFloor","file","setFile","handleAddRoom","form","FormData","append","name","data","post","headers","authorization","sessionStorage","getItem","status","emit","value","target","files"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport io from 'socket.io-client'\nimport api from '../../services/api'\nimport config from '../../config'\nimport handleActionAlert from '../../global/handleActionAlert'\n\nimport './style.css'\n\nconst socket = io(`${config.backend.url}`)\n\nfunction AddRoom() {\n  const [room, setRoom] = useState('')\n  const [floor, setFloor] = useState('')\n  const [file, setFile] = useState('')\n\n  async function handleAddRoom() {\n\n    if (room !== '' && floor !== '' && file !== '') {\n      const form = new FormData()\n      form.append('file', file, file.name)\n      form.append('room', room)\n      form.append('numberfloor', floor)\n\n      const { data } = await api.post('/room', form, {\n        headers: {\n          authorization: `Bearer ${sessionStorage.getItem('token')}`\n        }\n      })\n\n      if (data.status === \"Success in create room\") {\n\n        socket.emit('send-image', { data: 'send-image' })\n        handleActionAlert(\"Sucesso em Criar Sala\", 'flex', 'green')\n\n      } else {\n        handleActionAlert(\"Falha em Criar Sala\", 'flex', 'red')\n      }\n\n    }\n\n  }\n\n  return (\n    <div id=\"contianerAddRoom\">\n      <h2  className=\"primary-text-color\" >Adicionar Sala</h2>\n      <input className='inputs' type=\"text\" placeholder=\"Númbero da sala\" onChange={value => setRoom(value.target.value)} />\n      <input className='inputs' type=\"text\" placeholder=\"Número do andar\" onChange={value => setFloor(value.target.value)} />\n      <input type=\"file\" name=\"file\" onChange={value => setFile(value.target.files[0])} />\n      <p id=\"incorret\"></p>\n      <div>\n        <button className=\"buttons\" onClick={handleAddRoom}>Enviar</button>\n      </div>\n    </div>\n  );\n}\n\nexport default AddRoom;\n\n\n"]},"metadata":{},"sourceType":"module"}