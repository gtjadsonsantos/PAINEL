{"ast":null,"code":"var crypto = require('crypto'),\n    sha1 = require('./sha1'),\n    http = require('http'),\n    https = require('https'),\n    URL = require('url'),\n    querystring = require('querystring'),\n    OAuthUtils = require('./_utils');\n\nexports.OAuth = function (requestUrl, accessUrl, consumerKey, consumerSecret, version, authorize_callback, signatureMethod, nonceSize, customHeaders) {\n  this._isEcho = false;\n  this._requestUrl = requestUrl;\n  this._accessUrl = accessUrl;\n  this._consumerKey = consumerKey;\n  this._consumerSecret = this._encodeData(consumerSecret);\n\n  if (signatureMethod == \"RSA-SHA1\") {\n    this._privateKey = consumerSecret;\n  }\n\n  this._version = version;\n\n  if (authorize_callback === undefined) {\n    this._authorize_callback = \"oob\";\n  } else {\n    this._authorize_callback = authorize_callback;\n  }\n\n  if (signatureMethod != \"PLAINTEXT\" && signatureMethod != \"HMAC-SHA1\" && signatureMethod != \"RSA-SHA1\") throw new Error(\"Un-supported signature method: \" + signatureMethod);\n  this._signatureMethod = signatureMethod;\n  this._nonceSize = nonceSize || 32;\n  this._headers = customHeaders || {\n    \"Accept\": \"*/*\",\n    \"Connection\": \"close\",\n    \"User-Agent\": \"Node authentication\"\n  };\n  this._clientOptions = this._defaultClientOptions = {\n    \"requestTokenHttpMethod\": \"POST\",\n    \"accessTokenHttpMethod\": \"POST\",\n    \"followRedirects\": true\n  };\n  this._oauthParameterSeperator = \",\";\n};\n\nexports.OAuthEcho = function (realm, verify_credentials, consumerKey, consumerSecret, version, signatureMethod, nonceSize, customHeaders) {\n  this._isEcho = true;\n  this._realm = realm;\n  this._verifyCredentials = verify_credentials;\n  this._consumerKey = consumerKey;\n  this._consumerSecret = this._encodeData(consumerSecret);\n\n  if (signatureMethod == \"RSA-SHA1\") {\n    this._privateKey = consumerSecret;\n  }\n\n  this._version = version;\n  if (signatureMethod != \"PLAINTEXT\" && signatureMethod != \"HMAC-SHA1\" && signatureMethod != \"RSA-SHA1\") throw new Error(\"Un-supported signature method: \" + signatureMethod);\n  this._signatureMethod = signatureMethod;\n  this._nonceSize = nonceSize || 32;\n  this._headers = customHeaders || {\n    \"Accept\": \"*/*\",\n    \"Connection\": \"close\",\n    \"User-Agent\": \"Node authentication\"\n  };\n  this._oauthParameterSeperator = \",\";\n};\n\nexports.OAuthEcho.prototype = exports.OAuth.prototype;\n\nexports.OAuth.prototype._getTimestamp = function () {\n  return Math.floor(new Date().getTime() / 1000);\n};\n\nexports.OAuth.prototype._encodeData = function (toEncode) {\n  if (toEncode == null || toEncode == \"\") return \"\";else {\n    var result = encodeURIComponent(toEncode); // Fix the mismatch between OAuth's  RFC3986's and Javascript's beliefs in what is right and wrong ;)\n\n    return result.replace(/\\!/g, \"%21\").replace(/\\'/g, \"%27\").replace(/\\(/g, \"%28\").replace(/\\)/g, \"%29\").replace(/\\*/g, \"%2A\");\n  }\n};\n\nexports.OAuth.prototype._decodeData = function (toDecode) {\n  if (toDecode != null) {\n    toDecode = toDecode.replace(/\\+/g, \" \");\n  }\n\n  return decodeURIComponent(toDecode);\n};\n\nexports.OAuth.prototype._getSignature = function (method, url, parameters, tokenSecret) {\n  var signatureBase = this._createSignatureBase(method, url, parameters);\n\n  return this._createSignature(signatureBase, tokenSecret);\n};\n\nexports.OAuth.prototype._normalizeUrl = function (url) {\n  var parsedUrl = URL.parse(url, true);\n  var port = \"\";\n\n  if (parsedUrl.port) {\n    if (parsedUrl.protocol == \"http:\" && parsedUrl.port != \"80\" || parsedUrl.protocol == \"https:\" && parsedUrl.port != \"443\") {\n      port = \":\" + parsedUrl.port;\n    }\n  }\n\n  if (!parsedUrl.pathname || parsedUrl.pathname == \"\") parsedUrl.pathname = \"/\";\n  return parsedUrl.protocol + \"//\" + parsedUrl.hostname + port + parsedUrl.pathname;\n}; // Is the parameter considered an OAuth parameter\n\n\nexports.OAuth.prototype._isParameterNameAnOAuthParameter = function (parameter) {\n  var m = parameter.match('^oauth_');\n\n  if (m && m[0] === \"oauth_\") {\n    return true;\n  } else {\n    return false;\n  }\n}; // build the OAuth request authorization header\n\n\nexports.OAuth.prototype._buildAuthorizationHeaders = function (orderedParameters) {\n  var authHeader = \"OAuth \";\n\n  if (this._isEcho) {\n    authHeader += 'realm=\"' + this._realm + '\",';\n  }\n\n  for (var i = 0; i < orderedParameters.length; i++) {\n    // Whilst the all the parameters should be included within the signature, only the oauth_ arguments\n    // should appear within the authorization header.\n    if (this._isParameterNameAnOAuthParameter(orderedParameters[i][0])) {\n      authHeader += \"\" + this._encodeData(orderedParameters[i][0]) + \"=\\\"\" + this._encodeData(orderedParameters[i][1]) + \"\\\"\" + this._oauthParameterSeperator;\n    }\n  }\n\n  authHeader = authHeader.substring(0, authHeader.length - this._oauthParameterSeperator.length);\n  return authHeader;\n}; // Takes an object literal that represents the arguments, and returns an array\n// of argument/value pairs.\n\n\nexports.OAuth.prototype._makeArrayOfArgumentsHash = function (argumentsHash) {\n  var argument_pairs = [];\n\n  for (var key in argumentsHash) {\n    if (argumentsHash.hasOwnProperty(key)) {\n      var value = argumentsHash[key];\n\n      if (Array.isArray(value)) {\n        for (var i = 0; i < value.length; i++) {\n          argument_pairs[argument_pairs.length] = [key, value[i]];\n        }\n      } else {\n        argument_pairs[argument_pairs.length] = [key, value];\n      }\n    }\n  }\n\n  return argument_pairs;\n}; // Sorts the encoded key value pairs by encoded name, then encoded value\n\n\nexports.OAuth.prototype._sortRequestParams = function (argument_pairs) {\n  // Sort by name, then value.\n  argument_pairs.sort(function (a, b) {\n    if (a[0] == b[0]) {\n      return a[1] < b[1] ? -1 : 1;\n    } else return a[0] < b[0] ? -1 : 1;\n  });\n  return argument_pairs;\n};\n\nexports.OAuth.prototype._normaliseRequestParams = function (args) {\n  var argument_pairs = this._makeArrayOfArgumentsHash(args); // First encode them #3.4.1.3.2 .1\n\n\n  for (var i = 0; i < argument_pairs.length; i++) {\n    argument_pairs[i][0] = this._encodeData(argument_pairs[i][0]);\n    argument_pairs[i][1] = this._encodeData(argument_pairs[i][1]);\n  } // Then sort them #3.4.1.3.2 .2\n\n\n  argument_pairs = this._sortRequestParams(argument_pairs); // Then concatenate together #3.4.1.3.2 .3 & .4\n\n  var args = \"\";\n\n  for (var i = 0; i < argument_pairs.length; i++) {\n    args += argument_pairs[i][0];\n    args += \"=\";\n    args += argument_pairs[i][1];\n    if (i < argument_pairs.length - 1) args += \"&\";\n  }\n\n  return args;\n};\n\nexports.OAuth.prototype._createSignatureBase = function (method, url, parameters) {\n  url = this._encodeData(this._normalizeUrl(url));\n  parameters = this._encodeData(parameters);\n  return method.toUpperCase() + \"&\" + url + \"&\" + parameters;\n};\n\nexports.OAuth.prototype._createSignature = function (signatureBase, tokenSecret) {\n  if (tokenSecret === undefined) var tokenSecret = \"\";else tokenSecret = this._encodeData(tokenSecret); // consumerSecret is already encoded\n\n  var key = this._consumerSecret + \"&\" + tokenSecret;\n  var hash = \"\";\n\n  if (this._signatureMethod == \"PLAINTEXT\") {\n    hash = key;\n  } else if (this._signatureMethod == \"RSA-SHA1\") {\n    key = this._privateKey || \"\";\n    hash = crypto.createSign(\"RSA-SHA1\").update(signatureBase).sign(key, 'base64');\n  } else {\n    if (crypto.Hmac) {\n      hash = crypto.createHmac(\"sha1\", key).update(signatureBase).digest(\"base64\");\n    } else {\n      hash = sha1.HMACSHA1(key, signatureBase);\n    }\n  }\n\n  return hash;\n};\n\nexports.OAuth.prototype.NONCE_CHARS = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9'];\n\nexports.OAuth.prototype._getNonce = function (nonceSize) {\n  var result = [];\n  var chars = this.NONCE_CHARS;\n  var char_pos;\n  var nonce_chars_length = chars.length;\n\n  for (var i = 0; i < nonceSize; i++) {\n    char_pos = Math.floor(Math.random() * nonce_chars_length);\n    result[i] = chars[char_pos];\n  }\n\n  return result.join('');\n};\n\nexports.OAuth.prototype._createClient = function (port, hostname, method, path, headers, sslEnabled) {\n  var options = {\n    host: hostname,\n    port: port,\n    path: path,\n    method: method,\n    headers: headers\n  };\n  var httpModel;\n\n  if (sslEnabled) {\n    httpModel = https;\n  } else {\n    httpModel = http;\n  }\n\n  return httpModel.request(options);\n};\n\nexports.OAuth.prototype._prepareParameters = function (oauth_token, oauth_token_secret, method, url, extra_params) {\n  var oauthParameters = {\n    \"oauth_timestamp\": this._getTimestamp(),\n    \"oauth_nonce\": this._getNonce(this._nonceSize),\n    \"oauth_version\": this._version,\n    \"oauth_signature_method\": this._signatureMethod,\n    \"oauth_consumer_key\": this._consumerKey\n  };\n\n  if (oauth_token) {\n    oauthParameters[\"oauth_token\"] = oauth_token;\n  }\n\n  var sig;\n\n  if (this._isEcho) {\n    sig = this._getSignature(\"GET\", this._verifyCredentials, this._normaliseRequestParams(oauthParameters), oauth_token_secret);\n  } else {\n    if (extra_params) {\n      for (var key in extra_params) {\n        if (extra_params.hasOwnProperty(key)) oauthParameters[key] = extra_params[key];\n      }\n    }\n\n    var parsedUrl = URL.parse(url, false);\n\n    if (parsedUrl.query) {\n      var key2;\n      var extraParameters = querystring.parse(parsedUrl.query);\n\n      for (var key in extraParameters) {\n        var value = extraParameters[key];\n\n        if (typeof value == \"object\") {\n          // TODO: This probably should be recursive\n          for (key2 in value) {\n            oauthParameters[key + \"[\" + key2 + \"]\"] = value[key2];\n          }\n        } else {\n          oauthParameters[key] = value;\n        }\n      }\n    }\n\n    sig = this._getSignature(method, url, this._normaliseRequestParams(oauthParameters), oauth_token_secret);\n  }\n\n  var orderedParameters = this._sortRequestParams(this._makeArrayOfArgumentsHash(oauthParameters));\n\n  orderedParameters[orderedParameters.length] = [\"oauth_signature\", sig];\n  return orderedParameters;\n};\n\nexports.OAuth.prototype._performSecureRequest = function (oauth_token, oauth_token_secret, method, url, extra_params, post_body, post_content_type, callback) {\n  var orderedParameters = this._prepareParameters(oauth_token, oauth_token_secret, method, url, extra_params);\n\n  if (!post_content_type) {\n    post_content_type = \"application/x-www-form-urlencoded\";\n  }\n\n  var parsedUrl = URL.parse(url, false);\n  if (parsedUrl.protocol == \"http:\" && !parsedUrl.port) parsedUrl.port = 80;\n  if (parsedUrl.protocol == \"https:\" && !parsedUrl.port) parsedUrl.port = 443;\n  var headers = {};\n\n  var authorization = this._buildAuthorizationHeaders(orderedParameters);\n\n  if (this._isEcho) {\n    headers[\"X-Verify-Credentials-Authorization\"] = authorization;\n  } else {\n    headers[\"Authorization\"] = authorization;\n  }\n\n  headers[\"Host\"] = parsedUrl.host;\n\n  for (var key in this._headers) {\n    if (this._headers.hasOwnProperty(key)) {\n      headers[key] = this._headers[key];\n    }\n  } // Filter out any passed extra_params that are really to do with OAuth\n\n\n  for (var key in extra_params) {\n    if (this._isParameterNameAnOAuthParameter(key)) {\n      delete extra_params[key];\n    }\n  }\n\n  if ((method == \"POST\" || method == \"PUT\") && post_body == null && extra_params != null) {\n    // Fix the mismatch between the output of querystring.stringify() and this._encodeData()\n    post_body = querystring.stringify(extra_params).replace(/\\!/g, \"%21\").replace(/\\'/g, \"%27\").replace(/\\(/g, \"%28\").replace(/\\)/g, \"%29\").replace(/\\*/g, \"%2A\");\n  }\n\n  if (post_body) {\n    if (Buffer.isBuffer(post_body)) {\n      headers[\"Content-length\"] = post_body.length;\n    } else {\n      headers[\"Content-length\"] = Buffer.byteLength(post_body);\n    }\n  } else {\n    headers[\"Content-length\"] = 0;\n  }\n\n  headers[\"Content-Type\"] = post_content_type;\n  var path;\n  if (!parsedUrl.pathname || parsedUrl.pathname == \"\") parsedUrl.pathname = \"/\";\n  if (parsedUrl.query) path = parsedUrl.pathname + \"?\" + parsedUrl.query;else path = parsedUrl.pathname;\n  var request;\n\n  if (parsedUrl.protocol == \"https:\") {\n    request = this._createClient(parsedUrl.port, parsedUrl.hostname, method, path, headers, true);\n  } else {\n    request = this._createClient(parsedUrl.port, parsedUrl.hostname, method, path, headers);\n  }\n\n  var clientOptions = this._clientOptions;\n\n  if (callback) {\n    var data = \"\";\n    var self = this; // Some hosts *cough* google appear to close the connection early / send no content-length header\n    // allow this behaviour.\n\n    var allowEarlyClose = OAuthUtils.isAnEarlyCloseHost(parsedUrl.hostname);\n    var callbackCalled = false;\n\n    var passBackControl = function (response) {\n      if (!callbackCalled) {\n        callbackCalled = true;\n\n        if (response.statusCode >= 200 && response.statusCode <= 299) {\n          callback(null, data, response);\n        } else {\n          // Follow 301 or 302 redirects with Location HTTP header\n          if ((response.statusCode == 301 || response.statusCode == 302) && clientOptions.followRedirects && response.headers && response.headers.location) {\n            self._performSecureRequest(oauth_token, oauth_token_secret, method, response.headers.location, extra_params, post_body, post_content_type, callback);\n          } else {\n            callback({\n              statusCode: response.statusCode,\n              data: data\n            }, data, response);\n          }\n        }\n      }\n    };\n\n    request.on('response', function (response) {\n      response.setEncoding('utf8');\n      response.on('data', function (chunk) {\n        data += chunk;\n      });\n      response.on('end', function () {\n        passBackControl(response);\n      });\n      response.on('close', function () {\n        if (allowEarlyClose) {\n          passBackControl(response);\n        }\n      });\n    });\n    request.on(\"error\", function (err) {\n      if (!callbackCalled) {\n        callbackCalled = true;\n        callback(err);\n      }\n    });\n\n    if ((method == \"POST\" || method == \"PUT\") && post_body != null && post_body != \"\") {\n      request.write(post_body);\n    }\n\n    request.end();\n  } else {\n    if ((method == \"POST\" || method == \"PUT\") && post_body != null && post_body != \"\") {\n      request.write(post_body);\n    }\n\n    return request;\n  }\n\n  return;\n};\n\nexports.OAuth.prototype.setClientOptions = function (options) {\n  var key,\n      mergedOptions = {},\n      hasOwnProperty = Object.prototype.hasOwnProperty;\n\n  for (key in this._defaultClientOptions) {\n    if (!hasOwnProperty.call(options, key)) {\n      mergedOptions[key] = this._defaultClientOptions[key];\n    } else {\n      mergedOptions[key] = options[key];\n    }\n  }\n\n  this._clientOptions = mergedOptions;\n};\n\nexports.OAuth.prototype.getOAuthAccessToken = function (oauth_token, oauth_token_secret, oauth_verifier, callback) {\n  var extraParams = {};\n\n  if (typeof oauth_verifier == \"function\") {\n    callback = oauth_verifier;\n  } else {\n    extraParams.oauth_verifier = oauth_verifier;\n  }\n\n  this._performSecureRequest(oauth_token, oauth_token_secret, this._clientOptions.accessTokenHttpMethod, this._accessUrl, extraParams, null, null, function (error, data, response) {\n    if (error) callback(error);else {\n      var results = querystring.parse(data);\n      var oauth_access_token = results[\"oauth_token\"];\n      delete results[\"oauth_token\"];\n      var oauth_access_token_secret = results[\"oauth_token_secret\"];\n      delete results[\"oauth_token_secret\"];\n      callback(null, oauth_access_token, oauth_access_token_secret, results);\n    }\n  });\n}; // Deprecated\n\n\nexports.OAuth.prototype.getProtectedResource = function (url, method, oauth_token, oauth_token_secret, callback) {\n  this._performSecureRequest(oauth_token, oauth_token_secret, method, url, null, \"\", null, callback);\n};\n\nexports.OAuth.prototype.delete = function (url, oauth_token, oauth_token_secret, callback) {\n  return this._performSecureRequest(oauth_token, oauth_token_secret, \"DELETE\", url, null, \"\", null, callback);\n};\n\nexports.OAuth.prototype.get = function (url, oauth_token, oauth_token_secret, callback) {\n  return this._performSecureRequest(oauth_token, oauth_token_secret, \"GET\", url, null, \"\", null, callback);\n};\n\nexports.OAuth.prototype._putOrPost = function (method, url, oauth_token, oauth_token_secret, post_body, post_content_type, callback) {\n  var extra_params = null;\n\n  if (typeof post_content_type == \"function\") {\n    callback = post_content_type;\n    post_content_type = null;\n  }\n\n  if (typeof post_body != \"string\" && !Buffer.isBuffer(post_body)) {\n    post_content_type = \"application/x-www-form-urlencoded\";\n    extra_params = post_body;\n    post_body = null;\n  }\n\n  return this._performSecureRequest(oauth_token, oauth_token_secret, method, url, extra_params, post_body, post_content_type, callback);\n};\n\nexports.OAuth.prototype.put = function (url, oauth_token, oauth_token_secret, post_body, post_content_type, callback) {\n  return this._putOrPost(\"PUT\", url, oauth_token, oauth_token_secret, post_body, post_content_type, callback);\n};\n\nexports.OAuth.prototype.post = function (url, oauth_token, oauth_token_secret, post_body, post_content_type, callback) {\n  return this._putOrPost(\"POST\", url, oauth_token, oauth_token_secret, post_body, post_content_type, callback);\n};\n/**\n * Gets a request token from the OAuth provider and passes that information back\n * to the calling code.\n *\n * The callback should expect a function of the following form:\n *\n * function(err, token, token_secret, parsedQueryString) {}\n *\n * This method has optional parameters so can be called in the following 2 ways:\n *\n * 1) Primary use case: Does a basic request with no extra parameters\n *  getOAuthRequestToken( callbackFunction )\n *\n * 2) As above but allows for provision of extra parameters to be sent as part of the query to the server.\n *  getOAuthRequestToken( extraParams, callbackFunction )\n *\n * N.B. This method will HTTP POST verbs by default, if you wish to override this behaviour you will\n * need to provide a requestTokenHttpMethod option when creating the client.\n *\n **/\n\n\nexports.OAuth.prototype.getOAuthRequestToken = function (extraParams, callback) {\n  if (typeof extraParams == \"function\") {\n    callback = extraParams;\n    extraParams = {};\n  } // Callbacks are 1.0A related\n\n\n  if (this._authorize_callback) {\n    extraParams[\"oauth_callback\"] = this._authorize_callback;\n  }\n\n  this._performSecureRequest(null, null, this._clientOptions.requestTokenHttpMethod, this._requestUrl, extraParams, null, null, function (error, data, response) {\n    if (error) callback(error);else {\n      var results = querystring.parse(data);\n      var oauth_token = results[\"oauth_token\"];\n      var oauth_token_secret = results[\"oauth_token_secret\"];\n      delete results[\"oauth_token\"];\n      delete results[\"oauth_token_secret\"];\n      callback(null, oauth_token, oauth_token_secret, results);\n    }\n  });\n};\n\nexports.OAuth.prototype.signUrl = function (url, oauth_token, oauth_token_secret, method) {\n  if (method === undefined) {\n    var method = \"GET\";\n  }\n\n  var orderedParameters = this._prepareParameters(oauth_token, oauth_token_secret, method, url, {});\n\n  var parsedUrl = URL.parse(url, false);\n  var query = \"\";\n\n  for (var i = 0; i < orderedParameters.length; i++) {\n    query += orderedParameters[i][0] + \"=\" + this._encodeData(orderedParameters[i][1]) + \"&\";\n  }\n\n  query = query.substring(0, query.length - 1);\n  return parsedUrl.protocol + \"//\" + parsedUrl.host + parsedUrl.pathname + \"?\" + query;\n};\n\nexports.OAuth.prototype.authHeader = function (url, oauth_token, oauth_token_secret, method) {\n  if (method === undefined) {\n    var method = \"GET\";\n  }\n\n  var orderedParameters = this._prepareParameters(oauth_token, oauth_token_secret, method, url, {});\n\n  return this._buildAuthorizationHeaders(orderedParameters);\n};","map":{"version":3,"sources":["/home/jadson/Downloads/repositories/PAINEL2/frontend/node_modules/oauth/lib/oauth.js"],"names":["crypto","require","sha1","http","https","URL","querystring","OAuthUtils","exports","OAuth","requestUrl","accessUrl","consumerKey","consumerSecret","version","authorize_callback","signatureMethod","nonceSize","customHeaders","_isEcho","_requestUrl","_accessUrl","_consumerKey","_consumerSecret","_encodeData","_privateKey","_version","undefined","_authorize_callback","Error","_signatureMethod","_nonceSize","_headers","_clientOptions","_defaultClientOptions","_oauthParameterSeperator","OAuthEcho","realm","verify_credentials","_realm","_verifyCredentials","prototype","_getTimestamp","Math","floor","Date","getTime","toEncode","result","encodeURIComponent","replace","_decodeData","toDecode","decodeURIComponent","_getSignature","method","url","parameters","tokenSecret","signatureBase","_createSignatureBase","_createSignature","_normalizeUrl","parsedUrl","parse","port","protocol","pathname","hostname","_isParameterNameAnOAuthParameter","parameter","m","match","_buildAuthorizationHeaders","orderedParameters","authHeader","i","length","substring","_makeArrayOfArgumentsHash","argumentsHash","argument_pairs","key","hasOwnProperty","value","Array","isArray","_sortRequestParams","sort","a","b","_normaliseRequestParams","args","toUpperCase","hash","createSign","update","sign","Hmac","createHmac","digest","HMACSHA1","NONCE_CHARS","_getNonce","chars","char_pos","nonce_chars_length","random","join","_createClient","path","headers","sslEnabled","options","host","httpModel","request","_prepareParameters","oauth_token","oauth_token_secret","extra_params","oauthParameters","sig","query","key2","extraParameters","_performSecureRequest","post_body","post_content_type","callback","authorization","stringify","Buffer","isBuffer","byteLength","clientOptions","data","self","allowEarlyClose","isAnEarlyCloseHost","callbackCalled","passBackControl","response","statusCode","followRedirects","location","on","setEncoding","chunk","err","write","end","setClientOptions","mergedOptions","Object","call","getOAuthAccessToken","oauth_verifier","extraParams","accessTokenHttpMethod","error","results","oauth_access_token","oauth_access_token_secret","getProtectedResource","delete","get","_putOrPost","put","post","getOAuthRequestToken","requestTokenHttpMethod","signUrl"],"mappings":"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","sourcesContent":["var crypto= require('crypto'),\n    sha1= require('./sha1'),\n    http= require('http'),\n    https= require('https'),\n    URL= require('url'),\n    querystring= require('querystring'),\n    OAuthUtils= require('./_utils');\n\nexports.OAuth= function(requestUrl, accessUrl, consumerKey, consumerSecret, version, authorize_callback, signatureMethod, nonceSize, customHeaders) {\n  this._isEcho = false;\n\n  this._requestUrl= requestUrl;\n  this._accessUrl= accessUrl;\n  this._consumerKey= consumerKey;\n  this._consumerSecret= this._encodeData( consumerSecret );\n  if (signatureMethod == \"RSA-SHA1\") {\n    this._privateKey = consumerSecret;\n  }\n  this._version= version;\n  if( authorize_callback === undefined ) {\n    this._authorize_callback= \"oob\";\n  }\n  else {\n    this._authorize_callback= authorize_callback;\n  }\n\n  if( signatureMethod != \"PLAINTEXT\" && signatureMethod != \"HMAC-SHA1\" && signatureMethod != \"RSA-SHA1\")\n    throw new Error(\"Un-supported signature method: \" + signatureMethod )\n  this._signatureMethod= signatureMethod;\n  this._nonceSize= nonceSize || 32;\n  this._headers= customHeaders || {\"Accept\" : \"*/*\",\n                                   \"Connection\" : \"close\",\n                                   \"User-Agent\" : \"Node authentication\"}\n  this._clientOptions= this._defaultClientOptions= {\"requestTokenHttpMethod\": \"POST\",\n                                                    \"accessTokenHttpMethod\": \"POST\",\n                                                    \"followRedirects\": true};\n  this._oauthParameterSeperator = \",\";\n};\n\nexports.OAuthEcho= function(realm, verify_credentials, consumerKey, consumerSecret, version, signatureMethod, nonceSize, customHeaders) {\n  this._isEcho = true;\n\n  this._realm= realm;\n  this._verifyCredentials = verify_credentials;\n  this._consumerKey= consumerKey;\n  this._consumerSecret= this._encodeData( consumerSecret );\n  if (signatureMethod == \"RSA-SHA1\") {\n    this._privateKey = consumerSecret;\n  }\n  this._version= version;\n\n  if( signatureMethod != \"PLAINTEXT\" && signatureMethod != \"HMAC-SHA1\" && signatureMethod != \"RSA-SHA1\")\n    throw new Error(\"Un-supported signature method: \" + signatureMethod );\n  this._signatureMethod= signatureMethod;\n  this._nonceSize= nonceSize || 32;\n  this._headers= customHeaders || {\"Accept\" : \"*/*\",\n                                   \"Connection\" : \"close\",\n                                   \"User-Agent\" : \"Node authentication\"};\n  this._oauthParameterSeperator = \",\";\n}\n\nexports.OAuthEcho.prototype = exports.OAuth.prototype;\n\nexports.OAuth.prototype._getTimestamp= function() {\n  return Math.floor( (new Date()).getTime() / 1000 );\n}\n\nexports.OAuth.prototype._encodeData= function(toEncode){\n if( toEncode == null || toEncode == \"\" ) return \"\"\n else {\n    var result= encodeURIComponent(toEncode);\n    // Fix the mismatch between OAuth's  RFC3986's and Javascript's beliefs in what is right and wrong ;)\n    return result.replace(/\\!/g, \"%21\")\n                 .replace(/\\'/g, \"%27\")\n                 .replace(/\\(/g, \"%28\")\n                 .replace(/\\)/g, \"%29\")\n                 .replace(/\\*/g, \"%2A\");\n }\n}\n\nexports.OAuth.prototype._decodeData= function(toDecode) {\n  if( toDecode != null ) {\n    toDecode = toDecode.replace(/\\+/g, \" \");\n  }\n  return decodeURIComponent( toDecode);\n}\n\nexports.OAuth.prototype._getSignature= function(method, url, parameters, tokenSecret) {\n  var signatureBase= this._createSignatureBase(method, url, parameters);\n  return this._createSignature( signatureBase, tokenSecret );\n}\n\nexports.OAuth.prototype._normalizeUrl= function(url) {\n  var parsedUrl= URL.parse(url, true)\n   var port =\"\";\n   if( parsedUrl.port ) {\n     if( (parsedUrl.protocol == \"http:\" && parsedUrl.port != \"80\" ) ||\n         (parsedUrl.protocol == \"https:\" && parsedUrl.port != \"443\") ) {\n           port= \":\" + parsedUrl.port;\n         }\n   }\n\n  if( !parsedUrl.pathname  || parsedUrl.pathname == \"\" ) parsedUrl.pathname =\"/\";\n\n  return parsedUrl.protocol + \"//\" + parsedUrl.hostname + port + parsedUrl.pathname;\n}\n\n// Is the parameter considered an OAuth parameter\nexports.OAuth.prototype._isParameterNameAnOAuthParameter= function(parameter) {\n  var m = parameter.match('^oauth_');\n  if( m && ( m[0] === \"oauth_\" ) ) {\n    return true;\n  }\n  else {\n    return false;\n  }\n};\n\n// build the OAuth request authorization header\nexports.OAuth.prototype._buildAuthorizationHeaders= function(orderedParameters) {\n  var authHeader=\"OAuth \";\n  if( this._isEcho ) {\n    authHeader += 'realm=\"' + this._realm + '\",';\n  }\n\n  for( var i= 0 ; i < orderedParameters.length; i++) {\n     // Whilst the all the parameters should be included within the signature, only the oauth_ arguments\n     // should appear within the authorization header.\n     if( this._isParameterNameAnOAuthParameter(orderedParameters[i][0]) ) {\n      authHeader+= \"\" + this._encodeData(orderedParameters[i][0])+\"=\\\"\"+ this._encodeData(orderedParameters[i][1])+\"\\\"\"+ this._oauthParameterSeperator;\n     }\n  }\n\n  authHeader= authHeader.substring(0, authHeader.length-this._oauthParameterSeperator.length);\n  return authHeader;\n}\n\n// Takes an object literal that represents the arguments, and returns an array\n// of argument/value pairs.\nexports.OAuth.prototype._makeArrayOfArgumentsHash= function(argumentsHash) {\n  var argument_pairs= [];\n  for(var key in argumentsHash ) {\n    if (argumentsHash.hasOwnProperty(key)) {\n       var value= argumentsHash[key];\n       if( Array.isArray(value) ) {\n         for(var i=0;i<value.length;i++) {\n           argument_pairs[argument_pairs.length]= [key, value[i]];\n         }\n       }\n       else {\n         argument_pairs[argument_pairs.length]= [key, value];\n       }\n    }\n  }\n  return argument_pairs;\n}\n\n// Sorts the encoded key value pairs by encoded name, then encoded value\nexports.OAuth.prototype._sortRequestParams= function(argument_pairs) {\n  // Sort by name, then value.\n  argument_pairs.sort(function(a,b) {\n      if ( a[0]== b[0] )  {\n        return a[1] < b[1] ? -1 : 1;\n      }\n      else return a[0] < b[0] ? -1 : 1;\n  });\n\n  return argument_pairs;\n}\n\nexports.OAuth.prototype._normaliseRequestParams= function(args) {\n  var argument_pairs= this._makeArrayOfArgumentsHash(args);\n  // First encode them #3.4.1.3.2 .1\n  for(var i=0;i<argument_pairs.length;i++) {\n    argument_pairs[i][0]= this._encodeData( argument_pairs[i][0] );\n    argument_pairs[i][1]= this._encodeData( argument_pairs[i][1] );\n  }\n\n  // Then sort them #3.4.1.3.2 .2\n  argument_pairs= this._sortRequestParams( argument_pairs );\n\n  // Then concatenate together #3.4.1.3.2 .3 & .4\n  var args= \"\";\n  for(var i=0;i<argument_pairs.length;i++) {\n      args+= argument_pairs[i][0];\n      args+= \"=\"\n      args+= argument_pairs[i][1];\n      if( i < argument_pairs.length-1 ) args+= \"&\";\n  }\n  return args;\n}\n\nexports.OAuth.prototype._createSignatureBase= function(method, url, parameters) {\n  url= this._encodeData( this._normalizeUrl(url) );\n  parameters= this._encodeData( parameters );\n  return method.toUpperCase() + \"&\" + url + \"&\" + parameters;\n}\n\nexports.OAuth.prototype._createSignature= function(signatureBase, tokenSecret) {\n   if( tokenSecret === undefined ) var tokenSecret= \"\";\n   else tokenSecret= this._encodeData( tokenSecret );\n   // consumerSecret is already encoded\n   var key= this._consumerSecret + \"&\" + tokenSecret;\n\n   var hash= \"\"\n   if( this._signatureMethod == \"PLAINTEXT\" ) {\n     hash= key;\n   }\n   else if (this._signatureMethod == \"RSA-SHA1\") {\n     key = this._privateKey || \"\";\n     hash= crypto.createSign(\"RSA-SHA1\").update(signatureBase).sign(key, 'base64');\n   }\n   else {\n       if( crypto.Hmac ) {\n         hash = crypto.createHmac(\"sha1\", key).update(signatureBase).digest(\"base64\");\n       }\n       else {\n         hash= sha1.HMACSHA1(key, signatureBase);\n       }\n   }\n   return hash;\n}\nexports.OAuth.prototype.NONCE_CHARS= ['a','b','c','d','e','f','g','h','i','j','k','l','m','n',\n              'o','p','q','r','s','t','u','v','w','x','y','z','A','B',\n              'C','D','E','F','G','H','I','J','K','L','M','N','O','P',\n              'Q','R','S','T','U','V','W','X','Y','Z','0','1','2','3',\n              '4','5','6','7','8','9'];\n\nexports.OAuth.prototype._getNonce= function(nonceSize) {\n   var result = [];\n   var chars= this.NONCE_CHARS;\n   var char_pos;\n   var nonce_chars_length= chars.length;\n\n   for (var i = 0; i < nonceSize; i++) {\n       char_pos= Math.floor(Math.random() * nonce_chars_length);\n       result[i]=  chars[char_pos];\n   }\n   return result.join('');\n}\n\nexports.OAuth.prototype._createClient= function( port, hostname, method, path, headers, sslEnabled ) {\n  var options = {\n    host: hostname,\n    port: port,\n    path: path,\n    method: method,\n    headers: headers\n  };\n  var httpModel;\n  if( sslEnabled ) {\n    httpModel= https;\n  } else {\n    httpModel= http;\n  }\n  return httpModel.request(options);\n}\n\nexports.OAuth.prototype._prepareParameters= function( oauth_token, oauth_token_secret, method, url, extra_params ) {\n  var oauthParameters= {\n      \"oauth_timestamp\":        this._getTimestamp(),\n      \"oauth_nonce\":            this._getNonce(this._nonceSize),\n      \"oauth_version\":          this._version,\n      \"oauth_signature_method\": this._signatureMethod,\n      \"oauth_consumer_key\":     this._consumerKey\n  };\n\n  if( oauth_token ) {\n    oauthParameters[\"oauth_token\"]= oauth_token;\n  }\n\n  var sig;\n  if( this._isEcho ) {\n    sig = this._getSignature( \"GET\",  this._verifyCredentials,  this._normaliseRequestParams(oauthParameters), oauth_token_secret);\n  }\n  else {\n    if( extra_params ) {\n      for( var key in extra_params ) {\n        if (extra_params.hasOwnProperty(key)) oauthParameters[key]= extra_params[key];\n      }\n    }\n    var parsedUrl= URL.parse( url, false );\n\n    if( parsedUrl.query ) {\n      var key2;\n      var extraParameters= querystring.parse(parsedUrl.query);\n      for(var key in extraParameters ) {\n        var value= extraParameters[key];\n          if( typeof value == \"object\" ){\n            // TODO: This probably should be recursive\n            for(key2 in value){\n              oauthParameters[key + \"[\" + key2 + \"]\"] = value[key2];\n            }\n          } else {\n            oauthParameters[key]= value;\n          }\n        }\n    }\n\n    sig = this._getSignature( method,  url,  this._normaliseRequestParams(oauthParameters), oauth_token_secret);\n  }\n\n  var orderedParameters= this._sortRequestParams( this._makeArrayOfArgumentsHash(oauthParameters) );\n  orderedParameters[orderedParameters.length]= [\"oauth_signature\", sig];\n  return orderedParameters;\n}\n\nexports.OAuth.prototype._performSecureRequest= function( oauth_token, oauth_token_secret, method, url, extra_params, post_body, post_content_type,  callback ) {\n  var orderedParameters= this._prepareParameters(oauth_token, oauth_token_secret, method, url, extra_params);\n\n  if( !post_content_type ) {\n    post_content_type= \"application/x-www-form-urlencoded\";\n  }\n  var parsedUrl= URL.parse( url, false );\n  if( parsedUrl.protocol == \"http:\" && !parsedUrl.port ) parsedUrl.port= 80;\n  if( parsedUrl.protocol == \"https:\" && !parsedUrl.port ) parsedUrl.port= 443;\n\n  var headers= {};\n  var authorization = this._buildAuthorizationHeaders(orderedParameters);\n  if ( this._isEcho ) {\n    headers[\"X-Verify-Credentials-Authorization\"]= authorization;\n  }\n  else {\n    headers[\"Authorization\"]= authorization;\n  }\n\n  headers[\"Host\"] = parsedUrl.host\n\n  for( var key in this._headers ) {\n    if (this._headers.hasOwnProperty(key)) {\n      headers[key]= this._headers[key];\n    }\n  }\n\n  // Filter out any passed extra_params that are really to do with OAuth\n  for(var key in extra_params) {\n    if( this._isParameterNameAnOAuthParameter( key ) ) {\n      delete extra_params[key];\n    }\n  }\n\n  if( (method == \"POST\" || method == \"PUT\")  && ( post_body == null && extra_params != null) ) {\n    // Fix the mismatch between the output of querystring.stringify() and this._encodeData()\n    post_body= querystring.stringify(extra_params)\n                       .replace(/\\!/g, \"%21\")\n                       .replace(/\\'/g, \"%27\")\n                       .replace(/\\(/g, \"%28\")\n                       .replace(/\\)/g, \"%29\")\n                       .replace(/\\*/g, \"%2A\");\n  }\n\n  if( post_body ) {\n      if ( Buffer.isBuffer(post_body) ) {\n          headers[\"Content-length\"]= post_body.length;\n      } else {\n          headers[\"Content-length\"]= Buffer.byteLength(post_body);\n      }\n  } else {\n      headers[\"Content-length\"]= 0;\n  }\n\n  headers[\"Content-Type\"]= post_content_type;\n\n  var path;\n  if( !parsedUrl.pathname  || parsedUrl.pathname == \"\" ) parsedUrl.pathname =\"/\";\n  if( parsedUrl.query ) path= parsedUrl.pathname + \"?\"+ parsedUrl.query ;\n  else path= parsedUrl.pathname;\n\n  var request;\n  if( parsedUrl.protocol == \"https:\" ) {\n    request= this._createClient(parsedUrl.port, parsedUrl.hostname, method, path, headers, true);\n  }\n  else {\n    request= this._createClient(parsedUrl.port, parsedUrl.hostname, method, path, headers);\n  }\n\n  var clientOptions = this._clientOptions;\n  if( callback ) {\n    var data=\"\";\n    var self= this;\n\n    // Some hosts *cough* google appear to close the connection early / send no content-length header\n    // allow this behaviour.\n    var allowEarlyClose= OAuthUtils.isAnEarlyCloseHost( parsedUrl.hostname );\n    var callbackCalled= false;\n    var passBackControl = function( response ) {\n      if(!callbackCalled) {\n        callbackCalled= true;\n        if ( response.statusCode >= 200 && response.statusCode <= 299 ) {\n          callback(null, data, response);\n        } else {\n          // Follow 301 or 302 redirects with Location HTTP header\n          if((response.statusCode == 301 || response.statusCode == 302) && clientOptions.followRedirects && response.headers && response.headers.location) {\n            self._performSecureRequest( oauth_token, oauth_token_secret, method, response.headers.location, extra_params, post_body, post_content_type,  callback);\n          }\n          else {\n            callback({ statusCode: response.statusCode, data: data }, data, response);\n          }\n        }\n      }\n    }\n\n    request.on('response', function (response) {\n      response.setEncoding('utf8');\n      response.on('data', function (chunk) {\n        data+=chunk;\n      });\n      response.on('end', function () {\n        passBackControl( response );\n      });\n      response.on('close', function () {\n        if( allowEarlyClose ) {\n          passBackControl( response );\n        }\n      });\n    });\n\n    request.on(\"error\", function(err) {\n      if(!callbackCalled) {\n        callbackCalled= true;\n        callback( err )\n      }\n    });\n\n    if( (method == \"POST\" || method ==\"PUT\") && post_body != null && post_body != \"\" ) {\n      request.write(post_body);\n    }\n    request.end();\n  }\n  else {\n    if( (method == \"POST\" || method ==\"PUT\") && post_body != null && post_body != \"\" ) {\n      request.write(post_body);\n    }\n    return request;\n  }\n\n  return;\n}\n\nexports.OAuth.prototype.setClientOptions= function(options) {\n  var key,\n      mergedOptions= {},\n      hasOwnProperty= Object.prototype.hasOwnProperty;\n\n  for( key in this._defaultClientOptions ) {\n    if( !hasOwnProperty.call(options, key) ) {\n      mergedOptions[key]= this._defaultClientOptions[key];\n    } else {\n      mergedOptions[key]= options[key];\n    }\n  }\n\n  this._clientOptions= mergedOptions;\n};\n\nexports.OAuth.prototype.getOAuthAccessToken= function(oauth_token, oauth_token_secret, oauth_verifier,  callback) {\n  var extraParams= {};\n  if( typeof oauth_verifier == \"function\" ) {\n    callback= oauth_verifier;\n  } else {\n    extraParams.oauth_verifier= oauth_verifier;\n  }\n\n   this._performSecureRequest( oauth_token, oauth_token_secret, this._clientOptions.accessTokenHttpMethod, this._accessUrl, extraParams, null, null, function(error, data, response) {\n         if( error ) callback(error);\n         else {\n           var results= querystring.parse( data );\n           var oauth_access_token= results[\"oauth_token\"];\n           delete results[\"oauth_token\"];\n           var oauth_access_token_secret= results[\"oauth_token_secret\"];\n           delete results[\"oauth_token_secret\"];\n           callback(null, oauth_access_token, oauth_access_token_secret, results );\n         }\n   })\n}\n\n// Deprecated\nexports.OAuth.prototype.getProtectedResource= function(url, method, oauth_token, oauth_token_secret, callback) {\n  this._performSecureRequest( oauth_token, oauth_token_secret, method, url, null, \"\", null, callback );\n}\n\nexports.OAuth.prototype.delete= function(url, oauth_token, oauth_token_secret, callback) {\n  return this._performSecureRequest( oauth_token, oauth_token_secret, \"DELETE\", url, null, \"\", null, callback );\n}\n\nexports.OAuth.prototype.get= function(url, oauth_token, oauth_token_secret, callback) {\n  return this._performSecureRequest( oauth_token, oauth_token_secret, \"GET\", url, null, \"\", null, callback );\n}\n\nexports.OAuth.prototype._putOrPost= function(method, url, oauth_token, oauth_token_secret, post_body, post_content_type, callback) {\n  var extra_params= null;\n  if( typeof post_content_type == \"function\" ) {\n    callback= post_content_type;\n    post_content_type= null;\n  }\n  if ( typeof post_body != \"string\" && !Buffer.isBuffer(post_body) ) {\n    post_content_type= \"application/x-www-form-urlencoded\"\n    extra_params= post_body;\n    post_body= null;\n  }\n  return this._performSecureRequest( oauth_token, oauth_token_secret, method, url, extra_params, post_body, post_content_type, callback );\n}\n\n\nexports.OAuth.prototype.put= function(url, oauth_token, oauth_token_secret, post_body, post_content_type, callback) {\n  return this._putOrPost(\"PUT\", url, oauth_token, oauth_token_secret, post_body, post_content_type, callback);\n}\n\nexports.OAuth.prototype.post= function(url, oauth_token, oauth_token_secret, post_body, post_content_type, callback) {\n  return this._putOrPost(\"POST\", url, oauth_token, oauth_token_secret, post_body, post_content_type, callback);\n}\n\n/**\n * Gets a request token from the OAuth provider and passes that information back\n * to the calling code.\n *\n * The callback should expect a function of the following form:\n *\n * function(err, token, token_secret, parsedQueryString) {}\n *\n * This method has optional parameters so can be called in the following 2 ways:\n *\n * 1) Primary use case: Does a basic request with no extra parameters\n *  getOAuthRequestToken( callbackFunction )\n *\n * 2) As above but allows for provision of extra parameters to be sent as part of the query to the server.\n *  getOAuthRequestToken( extraParams, callbackFunction )\n *\n * N.B. This method will HTTP POST verbs by default, if you wish to override this behaviour you will\n * need to provide a requestTokenHttpMethod option when creating the client.\n *\n **/\nexports.OAuth.prototype.getOAuthRequestToken= function( extraParams, callback ) {\n   if( typeof extraParams == \"function\" ){\n     callback = extraParams;\n     extraParams = {};\n   }\n  // Callbacks are 1.0A related\n  if( this._authorize_callback ) {\n    extraParams[\"oauth_callback\"]= this._authorize_callback;\n  }\n  this._performSecureRequest( null, null, this._clientOptions.requestTokenHttpMethod, this._requestUrl, extraParams, null, null, function(error, data, response) {\n    if( error ) callback(error);\n    else {\n      var results= querystring.parse(data);\n\n      var oauth_token= results[\"oauth_token\"];\n      var oauth_token_secret= results[\"oauth_token_secret\"];\n      delete results[\"oauth_token\"];\n      delete results[\"oauth_token_secret\"];\n      callback(null, oauth_token, oauth_token_secret,  results );\n    }\n  });\n}\n\nexports.OAuth.prototype.signUrl= function(url, oauth_token, oauth_token_secret, method) {\n\n  if( method === undefined ) {\n    var method= \"GET\";\n  }\n\n  var orderedParameters= this._prepareParameters(oauth_token, oauth_token_secret, method, url, {});\n  var parsedUrl= URL.parse( url, false );\n\n  var query=\"\";\n  for( var i= 0 ; i < orderedParameters.length; i++) {\n    query+= orderedParameters[i][0]+\"=\"+ this._encodeData(orderedParameters[i][1]) + \"&\";\n  }\n  query= query.substring(0, query.length-1);\n\n  return parsedUrl.protocol + \"//\"+ parsedUrl.host + parsedUrl.pathname + \"?\" + query;\n};\n\nexports.OAuth.prototype.authHeader= function(url, oauth_token, oauth_token_secret, method) {\n  if( method === undefined ) {\n    var method= \"GET\";\n  }\n\n  var orderedParameters= this._prepareParameters(oauth_token, oauth_token_secret, method, url, {});\n  return this._buildAuthorizationHeaders(orderedParameters);\n};\n"]},"metadata":{},"sourceType":"script"}