{"ast":null,"code":"var _jsxFileName = \"/home/jadson/Downloads/repositories/PAINEL/frontend/src/components/Weather/index.js\";\nimport React, { useState, useEffect } from 'react';\nimport OAuth from 'oauth';\nimport config from '../../config';\nimport Time from '../Time';\nimport Price from '../Price';\nimport './style.css';\n\nfunction Weather() {\n  const [weather, setWeather] = useState([]);\n  const [update, setUpdate] = useState(0);\n  useEffect(() => {\n    /* https://developer.yahoo.com/weather/documentation.html#oauth-nodejs */\n    function getDada() {\n      const header = {\n        \"X-Yahoo-App-Id\": config.weather.appID,\n        \"Access-Control-Request-Method\": \"GET\",\n        \"Access-Control-Request-Headers\": \"X-PINGOTHER, Content-Type\"\n      };\n      const request = new OAuth.OAuth(null, null, config.weather.clientID, config.weather.clientSecret, '1.0', null, 'HMAC-SHA1', null, header);\n      request.get('https://weather-ydn-yql.media.yahoo.com/forecastrss?location=florianópolis&u=c&format=json', null, null, function (err, data, result) {\n        if (err) {\n          console.log(err);\n        } else {\n          const {\n            forecasts\n          } = JSON.parse(data);\n          const state = [];\n          forecasts.forEach(item => {\n            switch (item.day) {\n              case \"Mon\":\n                state.push({\n                  code: item.code,\n                  day: \"Segunda\"\n                });\n                break;\n\n              case \"Tue\":\n                state.push({\n                  code: item.code,\n                  day: \"Terça\"\n                });\n                break;\n\n              case \"Wed\":\n                state.push({\n                  code: item.code,\n                  day: \"Quarta\"\n                });\n                break;\n\n              case \"Thu\":\n                state.push({\n                  code: item.code,\n                  day: \"Quinta\"\n                });\n                break;\n\n              case \"Fri\":\n                state.push({\n                  code: item.code,\n                  day: \"Sexta\"\n                });\n                break;\n\n              case \"Sat\":\n                state.push({\n                  code: item.code,\n                  day: \"Sábado\"\n                });\n                break;\n\n              case \"Sun\":\n                state.push({\n                  code: item.code,\n                  day: \"Domingo\"\n                });\n                break;\n\n              default:\n                break;\n            }\n          });\n          setWeather(state);\n        }\n      });\n    }\n\n    getDada();\n  }, [update]);\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setUpdate(update => update + 1);\n    }, 50000);\n    return () => clearInterval(interval);\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"containerWeather\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Time, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"containerlist\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }\n  }, weather.map(weatherday => /*#__PURE__*/React.createElement(\"li\", {\n    key: Math.random() * 100,\n    className: \"item-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 15\n    }\n  }, weatherday.day), /*#__PURE__*/React.createElement(\"img\", {\n    src: `https://web.archive.org/web/20200529100011if_/http://l.yimg.com/a/i/us/we/52/${weatherday.code}.gif`,\n    alt: weatherday.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 15\n    }\n  })))), /*#__PURE__*/React.createElement(Price, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default Weather;","map":{"version":3,"sources":["/home/jadson/Downloads/repositories/PAINEL/frontend/src/components/Weather/index.js"],"names":["React","useState","useEffect","OAuth","config","Time","Price","Weather","weather","setWeather","update","setUpdate","getDada","header","appID","request","clientID","clientSecret","get","err","data","result","console","log","forecasts","JSON","parse","state","forEach","item","day","push","code","interval","setInterval","clearInterval","map","weatherday","Math","random","text"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport OAuth from 'oauth'\nimport config from '../../config'\nimport Time from '../Time'\nimport Price from '../Price'\n\nimport './style.css'\n\n\nfunction Weather() {\n  const [weather, setWeather] = useState([])\n  const [update, setUpdate] = useState(0)\n\n\n  useEffect(() => {\n    /* https://developer.yahoo.com/weather/documentation.html#oauth-nodejs */\n    function getDada() {\n\n      const header = {\n        \"X-Yahoo-App-Id\": config.weather.appID,\n        \"Access-Control-Request-Method\": \"GET\",\n        \"Access-Control-Request-Headers\": \"X-PINGOTHER, Content-Type\"\n      };\n      \n      const request = new OAuth.OAuth(\n        null,\n        null,\n        config.weather.clientID,\n        config.weather.clientSecret,\n        '1.0',\n        null,\n        'HMAC-SHA1',\n        null,\n        header\n      );\n    \n      request.get(\n        'https://weather-ydn-yql.media.yahoo.com/forecastrss?location=florianópolis&u=c&format=json',\n        null,\n        null,\n        function (err, data, result) {\n          if (err) {\n            console.log(err);\n          } else {\n            const { forecasts } = JSON.parse(data)\n            const state = []\n\n            forecasts.forEach(item => {\n\n              switch (item.day) {\n                case \"Mon\":\n                  state.push({ code: item.code, day: \"Segunda\" })\n                  break;\n                case \"Tue\":\n                  state.push({ code: item.code, day: \"Terça\" })\n                  break;\n                case \"Wed\":\n                  state.push({ code: item.code, day: \"Quarta\" })\n                  break;\n                case \"Thu\":\n                  state.push({ code: item.code, day: \"Quinta\" })\n                  break;\n                case \"Fri\":\n                  state.push({ code: item.code, day: \"Sexta\" })\n                  break;\n                case \"Sat\":\n                  state.push({ code: item.code, day: \"Sábado\" })\n                  break;\n                case \"Sun\":\n                  state.push({ code: item.code, day: \"Domingo\" })\n                  break;\n                default:\n                  break;\n              }\n\n            });\n\n            setWeather(state)\n\n          }\n        }\n      );\n    }\n    getDada()\n  }, [update])\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setUpdate(update => update + 1);\n    }, 50000);\n    return () => clearInterval(interval);\n  }, []);\n  \n\n\n  return (\n\n    <div className=\"containerWeather\" >\n      <Time/>\n      <ul className=\"containerlist\">\n        {\n          weather.map(weatherday => (\n\n            <li key={Math.random() * 100}  className=\"item-list\">\n              <p>{weatherday.day}</p>\n              <img src={`https://web.archive.org/web/20200529100011if_/http://l.yimg.com/a/i/us/we/52/${weatherday.code}.gif`} alt={weatherday.text} />\n            </li>\n\n          ))\n        }\n      </ul>\n      <Price/>\n    </div>\n  )\n}\n\nexport default Weather\n\n"]},"metadata":{},"sourceType":"module"}