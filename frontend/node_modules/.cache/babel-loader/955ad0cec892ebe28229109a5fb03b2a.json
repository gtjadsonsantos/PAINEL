{"ast":null,"code":"import _slicedToArray from \"/home/jadson/Downloads/repositories/PAINEL2/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/jadson/Downloads/repositories/PAINEL2/frontend/src/components/AlterPassword/index.js\";\nimport React, { useState } from 'react';\nimport api from '../../services/api';\nimport './style.css';\nimport handleActionAlert from '../../global/handleActionAlert';\n\nfunction AlterPassword() {\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        password = _useState2[0],\n        setPassword = _useState2[1];\n\n  const _useState3 = useState(''),\n        _useState4 = _slicedToArray(_useState3, 2),\n        verifyPassword = _useState4[0],\n        setVerifyPassword = _useState4[1];\n\n  async function handleAlterPassword() {\n    if (password !== '' && verifyPassword !== '') {\n      const _ref = await api.put('/user', {\n        username: sessionStorage.getItem('username'),\n        oldPassword: sessionStorage.getItem('password'),\n        password\n      }, {\n        headers: {\n          authorization: `Bearer ${sessionStorage.getItem('token')}`\n        }\n      }),\n            data = _ref.data;\n\n      if (data === 1) {\n        handleActionAlert(\"Sucesso em Atualizar Usu치rio\", 'flex', 'green');\n      } else {\n        handleActionAlert(\"Falha em Atualizar Usu치rio\", 'flex', 'red');\n      }\n    }\n  }\n\n  return React.createElement(\"div\", {\n    id: \"contianerAlterPassword\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    className: \"titleCreateUser\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, \"Alterar Senha\"), React.createElement(\"input\", {\n    className: \"inputs\",\n    placeholder: \"Nova senha\",\n    type: \"password\",\n    onChange: event => setPassword(event.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    className: \"inputs\",\n    placeholder: \"Confirme Nova senha\",\n    type: \"password\",\n    onChange: event => setVerifyPassword(event.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }), password == verifyPassword && password !== '' && verifyPassword !== '' ? React.createElement(\"p\", {\n    id: \"verify\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, \"Senha correta\") : React.createElement(\"p\", {\n    id: \"incorret\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, \"Senha Incorreta\"), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    id: \"submit\",\n    onClick: handleAlterPassword,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, \"Enviar\")));\n}\n\nexport default AlterPassword;","map":{"version":3,"sources":["/home/jadson/Downloads/repositories/PAINEL2/frontend/src/components/AlterPassword/index.js"],"names":["React","useState","api","handleActionAlert","AlterPassword","password","setPassword","verifyPassword","setVerifyPassword","handleAlterPassword","put","username","sessionStorage","getItem","oldPassword","headers","authorization","data","event","target","value"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,GAAP,MAAgB,oBAAhB;AACA,OAAO,aAAP;AACA,OAAOC,iBAAP,MAA8B,gCAA9B;;AAGA,SAASC,aAAT,GAAyB;AAAA,oBACSH,QAAQ,CAAC,EAAD,CADjB;AAAA;AAAA,QAChBI,QADgB;AAAA,QACNC,WADM;;AAAA,qBAEqBL,QAAQ,CAAC,EAAD,CAF7B;AAAA;AAAA,QAEhBM,cAFgB;AAAA,QAEAC,iBAFA;;AAIvB,iBAAeC,mBAAf,GAAqC;AAEnC,QAAIJ,QAAQ,KAAK,EAAb,IAAmBE,cAAc,KAAK,EAA1C,EAA8C;AAAA,mBAE5B,MAAML,GAAG,CAACQ,GAAJ,CAAQ,OAAR,EAAiB;AACrCC,QAAAA,QAAQ,EAAEC,cAAc,CAACC,OAAf,CAAuB,UAAvB,CAD2B;AAErCC,QAAAA,WAAW,EAAEF,cAAc,CAACC,OAAf,CAAuB,UAAvB,CAFwB;AAGrCR,QAAAA;AAHqC,OAAjB,EAInB;AACDU,QAAAA,OAAO,EAAE;AACPC,UAAAA,aAAa,EAAG,UAASJ,cAAc,CAACC,OAAf,CAAuB,OAAvB,CAAgC;AADlD;AADR,OAJmB,CAFsB;AAAA,YAEpCI,IAFoC,QAEpCA,IAFoC;;AAY5C,UAAGA,IAAI,KAAK,CAAZ,EAAe;AACbd,QAAAA,iBAAiB,CAAC,8BAAD,EAAgC,MAAhC,EAAuC,OAAvC,CAAjB;AACD,OAFD,MAEK;AACHA,QAAAA,iBAAiB,CAAC,4BAAD,EAA8B,MAA9B,EAAqC,KAArC,CAAjB;AACD;AAEF;AACF;;AAED,SACE;AAAK,IAAA,EAAE,EAAC,wBAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAC,iBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,EAEE;AAAO,IAAA,SAAS,EAAC,QAAjB;AAA0B,IAAA,WAAW,EAAC,YAAtC;AAAmD,IAAA,IAAI,EAAC,UAAxD;AAAmE,IAAA,QAAQ,EAAEe,KAAK,IAAIZ,WAAW,CAACY,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAjG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE;AAAO,IAAA,SAAS,EAAC,QAAjB;AAA0B,IAAA,WAAW,EAAC,qBAAtC;AAA4D,IAAA,IAAI,EAAC,UAAjE;AAA4E,IAAA,QAAQ,EAAEF,KAAK,IAAIV,iBAAiB,CAACU,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAhH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,EAKKf,QAAQ,IAAIE,cAAZ,IAA+BF,QAAQ,KAAK,EAA5C,IAAoDE,cAAc,KAAK,EAAxE,GAEE;AAAG,IAAA,EAAE,EAAC,QAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAFF,GAEqC;AAAG,IAAA,EAAE,EAAC,UAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAPzC,EASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAQ,IAAA,EAAE,EAAC,QAAX;AAAoB,IAAA,OAAO,EAAEE,mBAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,CATF,CADF;AAeD;;AAED,eAAeL,aAAf","sourcesContent":["import React, { useState } from 'react';\nimport api from '../../services/api'\nimport './style.css'\nimport handleActionAlert from '../../global/handleActionAlert'\n\n\nfunction AlterPassword() {\n  const [password, setPassword] = useState('')\n  const [verifyPassword, setVerifyPassword] = useState('')\n\n  async function handleAlterPassword() {\n\n    if (password !== '' && verifyPassword !== '') {\n\n       const {data} = await api.put('/user', {\n        username: sessionStorage.getItem('username'),\n        oldPassword: sessionStorage.getItem('password'),\n        password\n      }, {\n        headers: {\n          authorization: `Bearer ${sessionStorage.getItem('token')}`\n        }\n      })\n\n      if(data === 1 ){\n        handleActionAlert(\"Sucesso em Atualizar Usu치rio\",'flex','green')\n      }else{\n        handleActionAlert(\"Falha em Atualizar Usu치rio\",'flex','red')\n      }\n\n    } \n  }\n\n  return (\n    <div id=\"contianerAlterPassword\">\n      <h2 className=\"titleCreateUser\" >Alterar Senha</h2>\n      <input className='inputs' placeholder=\"Nova senha\" type=\"password\" onChange={event => setPassword(event.target.value)} />\n      <input className='inputs' placeholder=\"Confirme Nova senha\" type=\"password\" onChange={event => setVerifyPassword(event.target.value)} />\n      {\n        (password == verifyPassword && (password !== '') && (verifyPassword !== '')) \n        \n        ? <p id=\"verify\">Senha correta</p> : <p id=\"incorret\">Senha Incorreta</p>\n      }\n      <div>\n        <button id=\"submit\" onClick={handleAlterPassword} >Enviar</button>\n      </div>\n    </div>\n  );\n}\n\nexport default AlterPassword;\n\n\n"]},"metadata":{},"sourceType":"module"}