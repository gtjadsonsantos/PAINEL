{"ast":null,"code":"import _slicedToArray from \"/home/jadson/Downloads/repositories/PAINEL2/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/jadson/Downloads/repositories/PAINEL2/frontend/src/components/AddRoom/index.js\";\nimport React, { useState } from 'react';\nimport io from 'socket.io-client';\nimport api from '../../services/api';\nimport Themes from '../../global/Themes';\nimport config from '../../config';\nimport './style.css';\nconst socket = io(`${config.backend.url}`);\n\nfunction AddRoom() {\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        room = _useState2[0],\n        setRoom = _useState2[1];\n\n  const _useState3 = useState(''),\n        _useState4 = _slicedToArray(_useState3, 2),\n        floor = _useState4[0],\n        setFloor = _useState4[1];\n\n  const _useState5 = useState(''),\n        _useState6 = _slicedToArray(_useState5, 2),\n        file = _useState6[0],\n        setFile = _useState6[1];\n\n  async function handleAddRoom() {\n    if (room !== '' && floor !== '' && file !== '') {\n      const data = new FormData();\n      data.append('file', file, file.name);\n      data.append('room', room);\n      data.append('numberfloor', floor);\n      const response = await api.post('/room', data, {\n        headers: {\n          authorization: `Bearer ${sessionStorage.getItem('token')}`\n        }\n      });\n\n      if (response.status === 200) {\n        socket.emit('send-image', {\n          data: 'send-image'\n        });\n      }\n    } else {\n      document.getElementById('#incorret').innerText = \"Preencher todos os campos!!\";\n    }\n  }\n\n  return React.createElement(\"div\", {\n    id: \"contianerAddRoom\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, \"Adicionar Sala\"), React.createElement(\"input\", {\n    className: \"inputs\",\n    type: \"text\",\n    placeholder: \"N\\xFAmbero da sala\",\n    onChange: value => setRoom(value.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    className: \"inputs\",\n    type: \"text\",\n    placeholder: \"N\\xFAmero do andar\",\n    onChange: value => setFloor(value.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"file\",\n    name: \"file\",\n    onChange: value => setFile(value.target.files[0]),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    id: \"incorret\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    id: \"submit\",\n    onClick: handleAddRoom,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, \"Enviar\")));\n}\n\nexport default AddRoom;","map":{"version":3,"sources":["/home/jadson/Downloads/repositories/PAINEL2/frontend/src/components/AddRoom/index.js"],"names":["React","useState","io","api","Themes","config","socket","backend","url","AddRoom","room","setRoom","floor","setFloor","file","setFile","handleAddRoom","data","FormData","append","name","response","post","headers","authorization","sessionStorage","getItem","status","emit","document","getElementById","innerText","value","target","files"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport io from 'socket.io-client'\nimport api from '../../services/api'\nimport Themes from '../../global/Themes'\nimport config from '../../config'\n\nimport './style.css'\n\nconst socket = io(`${config.backend.url}`)\n\nfunction AddRoom() {\n  const [room, setRoom] = useState('')\n  const [floor, setFloor] = useState('')\n  const [file, setFile] = useState('')\n\n  async function handleAddRoom() {\n\n    if (room !== '' && floor !== '' && file !== '') {\n      const data = new FormData()\n      data.append('file', file, file.name)\n      data.append('room', room)\n      data.append('numberfloor', floor)\n\n      const response = await api.post('/room', data, {\n        headers: {\n          authorization: `Bearer ${sessionStorage.getItem('token')}`\n        }\n      })\n\n      if (response.status === 200) {\n\n        socket.emit('send-image', { data: 'send-image' })\n\n      }\n\n    } else {\n      document.getElementById('#incorret').innerText = \"Preencher todos os campos!!\"\n    }\n\n  }\n\n  return (\n    <div id=\"contianerAddRoom\">\n      <h2>Adicionar Sala</h2>\n      <input className='inputs' type=\"text\" placeholder=\"Númbero da sala\" onChange={value => setRoom(value.target.value)} />\n      <input className='inputs' type=\"text\" placeholder=\"Número do andar\" onChange={value => setFloor(value.target.value)} />\n      <input type=\"file\" name=\"file\" onChange={value => setFile(value.target.files[0])} />\n      <p id=\"incorret\"></p>\n      <div>\n        <button id=\"submit\" onClick={handleAddRoom} >Enviar</button>\n      </div>\n    </div>\n  );\n}\n\nexport default AddRoom;\n\n\n"]},"metadata":{},"sourceType":"module"}