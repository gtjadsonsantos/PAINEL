{"ast":null,"code":"var _jsxFileName = \"/home/jadson/Downloads/repositories/PAINEL/frontend/src/components/UpdateRoom/index.js\";\nimport React, { useState } from 'react';\nimport io from 'socket.io-client';\nimport api from '../../services/api';\nimport config from '../../config';\nimport handleActionAlert from '../../global/handleActionAlert';\nimport './style.css';\nconst socket = io(`${config.backend.url}`);\n\nfunction UpdateRoom() {\n  const [room, setRoom] = useState('');\n  const [file, setFile] = useState('');\n\n  async function handleUpdateRoom() {\n    if (room !== '' && file !== '') {\n      const form = new FormData();\n      form.append('file', file, file.name);\n      form.append('room', room);\n      const {\n        data\n      } = await api.put('/room', form, {\n        headers: {\n          authorization: `Bearer ${sessionStorage.getItem('token')}`\n        }\n      });\n\n      if (data === 1) {\n        socket.emit('send-image', {\n          data: 'send-image'\n        });\n        handleActionAlert(\"Sucesso em Atualizar Sala\", 'flex', 'green');\n      } else {\n        handleActionAlert(\"Falha em Atualizar Sala\", 'flex', 'red');\n      }\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"contianerUpdateRoom\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"primary-text-color\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 10\n    }\n  }, \"Atualizar Sala\"), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"inputs\",\n    type: \"text\",\n    placeholder: \"N\\xFAmero da sala\",\n    onChange: value => setRoom(value.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 10\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    name: \"file\",\n    onChange: value => setFile(value.target.files[0]),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 10\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    id: \"incorret\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 10\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"buttons\",\n    onClick: handleUpdateRoom,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 14\n    }\n  }, \"Enviar\")));\n}\n\nexport default UpdateRoom;","map":{"version":3,"sources":["/home/jadson/Downloads/repositories/PAINEL/frontend/src/components/UpdateRoom/index.js"],"names":["React","useState","io","api","config","handleActionAlert","socket","backend","url","UpdateRoom","room","setRoom","file","setFile","handleUpdateRoom","form","FormData","append","name","data","put","headers","authorization","sessionStorage","getItem","emit","value","target","files"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,EAAP,MAAe,kBAAf;AACA,OAAOC,GAAP,MAAgB,oBAAhB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,iBAAP,MAA8B,gCAA9B;AAEA,OAAO,aAAP;AAEA,MAAMC,MAAM,GAAGJ,EAAE,CAAE,GAAEE,MAAM,CAACG,OAAP,CAAeC,GAAI,EAAvB,CAAjB;;AAGA,SAASC,UAAT,GAAsB;AAClB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACW,IAAD,EAAOC,OAAP,IAAkBZ,QAAQ,CAAC,EAAD,CAAhC;;AAEA,iBAAea,gBAAf,GAAkC;AAE9B,QAAIJ,IAAI,KAAK,EAAT,IAAeE,IAAI,KAAK,EAA5B,EAA+B;AAE3B,YAAMG,IAAI,GAAG,IAAIC,QAAJ,EAAb;AACAD,MAAAA,IAAI,CAACE,MAAL,CAAY,MAAZ,EAAmBL,IAAnB,EAAwBA,IAAI,CAACM,IAA7B;AACAH,MAAAA,IAAI,CAACE,MAAL,CAAY,MAAZ,EAAoBP,IAApB;AAEA,YAAM;AAACS,QAAAA;AAAD,UAAS,MAAMhB,GAAG,CAACiB,GAAJ,CAAQ,OAAR,EACrBL,IADqB,EAErB;AACIM,QAAAA,OAAO,EAAE;AACLC,UAAAA,aAAa,EAAG,UAASC,cAAc,CAACC,OAAf,CAAuB,OAAvB,CAAgC;AADpD;AADb,OAFqB,CAArB;;AAQA,UAAGL,IAAI,KAAK,CAAZ,EAAc;AAEVb,QAAAA,MAAM,CAACmB,IAAP,CAAY,YAAZ,EAA2B;AAAEN,UAAAA,IAAI,EAAE;AAAR,SAA3B;AACAd,QAAAA,iBAAiB,CAAC,2BAAD,EAA6B,MAA7B,EAAoC,OAApC,CAAjB;AACH,OAJD,MAIM;AACFA,QAAAA,iBAAiB,CAAC,yBAAD,EAA2B,MAA3B,EAAkC,KAAlC,CAAjB;AACH;AACJ;AACJ;;AACD,sBACE;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACG;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADH,eAEG;AAAO,IAAA,SAAS,EAAC,QAAjB;AAA0B,IAAA,IAAI,EAAC,MAA/B;AAAsC,IAAA,WAAW,EAAC,mBAAlD;AAAmE,IAAA,QAAQ,EAAEqB,KAAK,IAAIf,OAAO,CAACe,KAAK,CAACC,MAAN,CAAaD,KAAd,CAA7F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFH,eAGG;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,IAAI,EAAC,MAAxB;AAA+B,IAAA,QAAQ,EAAEA,KAAK,IAAIb,OAAO,CAACa,KAAK,CAACC,MAAN,CAAaC,KAAb,CAAmB,CAAnB,CAAD,CAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHH,eAIG;AAAG,IAAA,EAAE,EAAC,UAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJH,eAKG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAQ,IAAA,SAAS,EAAC,SAAlB;AAA4B,IAAA,OAAO,EAAEd,gBAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,CALH,CADF;AAWH;;AAED,eAAeL,UAAf","sourcesContent":["import React, { useState } from 'react';\nimport io from 'socket.io-client';\nimport api from '../../services/api'\nimport config from '../../config'\nimport handleActionAlert from '../../global/handleActionAlert'\n\nimport './style.css'\n\nconst socket = io(`${config.backend.url}`)\n\n\nfunction UpdateRoom() {\n    const [room, setRoom] = useState('')  \n    const [file, setFile] = useState('')  \n\n    async function handleUpdateRoom (){\n    \n        if (room !== '' && file !== ''){\n\n            const form = new FormData()\n            form.append('file',file,file.name)\n            form.append('room', room)\n          \n            const {data} = await api.put('/room', \n            form,\n            {\n                headers: {\n                    authorization: `Bearer ${sessionStorage.getItem('token')}`\n                }\n            })\n         \n            if(data === 1){\n               \n                socket.emit('send-image',  { data: 'send-image' } )\n                handleActionAlert(\"Sucesso em Atualizar Sala\",'flex','green')                \n            }else {\n                handleActionAlert(\"Falha em Atualizar Sala\",'flex','red')\n            }\n        }\n    }\n    return (\n      <div className=\"contianerUpdateRoom\">\n         <h2  className=\"primary-text-color\">Atualizar Sala</h2>\n         <input className='inputs' type=\"text\" placeholder=\"NÃºmero da sala\" onChange={value => setRoom(value.target.value)} />\n         <input type=\"file\" name=\"file\" onChange={value => setFile(value.target.files[0])} />\n         <p id=\"incorret\"></p>\n         <div>\n             <button className=\"buttons\" onClick={handleUpdateRoom} >Enviar</button>\n         </div>\n      </div>    \n    );\n}\n\nexport default UpdateRoom;\n\n\n"]},"metadata":{},"sourceType":"module"}